name: "Synopsys Intelligent Security Scan"
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: macos-latest
    env:
      COV_BIN: /Users/badyanka/.synopsys/polaris/coverity-analysis-tools/cov_analysis-macosx-2021.01-1/bin
      BLDCMD: mvn -B -DskipTests clean package --file pom.xml
      CHECKERS: --all --webapp-security 
    steps:
    - uses: actions/checkout@v2
    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Print Public IP
      run: |
        echo ${{ steps.ip.outputs.ipv4 }}
        echo ${{ steps.ip.outputs.ipv6 }}
   
    - name: IO Scan
      id: prescription
      uses: synopsys-sig/intelligent-security-scan@48eedfcd42bc342a294dc495ac452797b2d9ff08
      with:
        stage: "IO"
        ioServerUrl: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}        
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        additionalWorkflowArgs: "--slack.token=${{secrets.SLACK_TOKEN}} --polaris.url=${{secrets.POLARIS_SERVER_URL}} --IS_SAST_ENABLED=true --IS_SCA_ENABLED=true --github.token=${{secrets.GH_ATOKEN}} --detect.project.name=manojrbsnps/Testproj --detect.project.version.name=1.0 --polaris.project.name=manojrbsnps/Testproj --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --jira.auth.token=${{secrets.JIRA_AUTH_TOKEN}} --sensitive.package.pattern='.*(.java)' --jira.project.name=DEV --jira.api.url=https://coverity-e2e-test.atlassian.net --jira.username=sig-rnd-io-testuser@synopsys.com --jira.issues.query=project=DEV --blackduck.project.name=manojrbsnps/Testproj:1.0 --blackduck.url=${{secrets.BLACKDUCK_URL}} --blackduck.api.token=${{secrets.BLACKDUCK_TOKEN}}"
    
    - name: Static Analysis with Coverity
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      continue-on-error: true
      run: |
         export "PATH=$COV_BIN:$PATH"
         $COV_BIN/cov-configure --java
         rm -rf temp
         $COV_BIN/cov-build --dir temp $BLDCMD
         $COV_BIN/cov-analyze --dir temp --ticker-mode none --strip-path $PWD $CHECKERS
         $COV_BIN/cov-format-errors --dir temp --json-output-v7 coverity-results.json
    - name: Software Composition Analysis with Black Duck
      if: ${{steps.prescription.outputs.scaScan == 'true' }}
      uses: blackducksoftware/github-action@v2
      with:
         args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN}}" --detect.project.name=manojrbsnps/Testproj --detect.project.version.name=1.0 --detect.tools="DETECTOR" --blackduck.trust.cert=true'
    - name: Synopsys Intelligent Security Scan
      if: ${{steps.prescription.outputs.sastScan == 'true' || steps.prescription.outputs.scaScan == 'true'}}
      uses: synopsys-sig/intelligent-security-scan@48eedfcd42bc342a294dc495ac452797b2d9ff08
      with:
        ioServerURL: ${{secrets.IO_SERVER_URL}}
        ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
        workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
        additionalWorkflowArgs: "--slack.token=${{secrets.SLACK_TOKEN}} --polaris.url=${{secrets.POLARIS_SERVER_URL}}--polaris.url=${{secrets.POLARIS_SERVER_URL}} --IS_SAST_ENABLED=${{steps.prescription.outputs.sastScan}} --IS_SCA_ENABLED=${{steps.prescription.outputs.scaScan}} --github.token=${{secrets.GH_ATOKEN}} --polaris.project.name=manojrbsnps/Testproj --polaris.token=${{secrets.POLARIS_ACCESS_TOKEN}} --jira.auth.token=${{secrets.JIRA_AUTH_TOKEN}} --sensitive.package.pattern='.*(.java)' --jira.project.name=DEV --jira.api.url=https://coverity-e2e-test.atlassian.net --jira.username=sig-rnd-io-testuser@synopsys.com --detect.project.name=manojrbsnps/Testproj --detect.project.version.name=1.0 --jira.issues.query=project=DEV --blackduck.project.name=manojrbsnps/Testproj:1.0 --blackduck.url=${{secrets.BLACKDUCK_URL}} --blackduck.api.token=${{secrets.BLACKDUCK_TOKEN}}"        
        stage: "WORKFLOW"
    - name: Upload SARIF file
      if: ${{steps.prescription.outputs.sastScan == 'true' }}
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: workflowengine-results.sarif.json
